<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>IACNNEXUS Web3 OpenProject</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <!-- Tailwind CSS -->
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-900 text-white font-sans">

  <!-- HEADER -->
  <header class="bg-gray-800 p-4 text-center shadow">
    <h1 class="text-2xl font-bold">üåê IACNNEXUS ‚Äî Web3 OpenProject</h1>
    <p class="text-sm text-gray-400">AI + Blockchain for the Future</p>
  </header>

  <main class="max-w-3xl mx-auto p-6 space-y-8">

    <!-- AI CHATBOT -->
    <section class="bg-gray-800 p-6 rounded-2xl shadow-lg">
      <h2 class="text-xl font-bold mb-4">ü§ñ AI Assistant</h2>
      <div id="chatBox" class="h-64 overflow-y-auto p-3 bg-gray-900 rounded-xl mb-4 text-sm"></div>
      <div class="flex gap-2">
        <input id="userInput" class="flex-1 p-2 rounded-xl bg-gray-700 text-white" placeholder="Ketik pesan...">
        <button onclick="sendMessage()" class="px-4 py-2 rounded-xl bg-indigo-500 hover:bg-indigo-600">Kirim</button>
      </div>
    </section>

    <!-- WEB3 DONATE WIDGET -->
    <section class="bg-gray-800 p-6 rounded-2xl shadow-lg">
      <h2 class="text-xl font-bold mb-4">üíé Donate with Crypto</h2>

      <div class="donate-box">
        <div class="donate-row mb-3">
          <button id="connectBtn" class="btn btn-primary bg-cyan-500 px-4 py-2 rounded-xl">Connect Wallet</button>
          <div id="walletInfo" class="ml-2 text-gray-400 text-sm">Not connected</div>
        </div>

        <div class="donate-row mb-3 flex gap-2">
          <input id="ethAmount" class="flex-1 p-2 rounded-xl bg-gray-700 text-white" placeholder="Amount (ETH)" value="0.01">
          <button id="donateEthBtn" class="bg-purple-500 px-4 py-2 rounded-xl">Donate ETH</button>
        </div>

        <p class="text-gray-400 text-sm mb-2">Donation address: 
          <span id="donationAddr" class="font-mono">0xE6206E8C6060942B61f42Ec675D415462c1D7986</span>
        </p>

        <div class="bg-gray-900 p-3 rounded-xl text-sm h-32 overflow-auto" id="txLog"></div>
      </div>
    </section>

  </main>

  <!-- FOOTER -->
  <footer class="bg-gray-800 text-center text-sm text-gray-400 p-4">
    ¬© 2025 IACNNEXUS Web3 OpenProject
  </footer>

  <!-- Ethers.js + WalletConnect -->
  <script src="https://cdn.jsdelivr.net/npm/ethers@5.7.2/dist/ethers.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@walletconnect/web3-provider@1.8.0/dist/umd/index.min.js"></script>

  <!-- AI Chatbot Script -->
  <script>
    const chatBox = document.getElementById('chatBox');
    const input = document.getElementById('userInput');

    async function sendMessage(){
      const text = input.value.trim();
      if(!text) return;
      appendMessage("You", text);
      input.value = "";

      try {
        const res = await fetch("https://api.openai.com/v1/chat/completions", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "Authorization": "Bearer YOUR_OPENAI_API_KEY"
          },
          body: JSON.stringify({
            model: "gpt-5",
            messages: [{role: "user", content: text}]
          })
        });
        const data = await res.json();
        const reply = data.choices?.[0]?.message?.content || "‚ö†Ô∏è No response";
        appendMessage("AI", reply);
      } catch(err) {
        appendMessage("AI", "‚ùå Error: " + err.message);
      }
    }

    function appendMessage(sender, msg){
      const div = document.createElement("div");
      div.innerHTML = `<b>${sender}:</b> ${msg}`;
      chatBox.appendChild(div);
      chatBox.scrollTop = chatBox.scrollHeight;
    }
  </script>

  <!-- Web3 Donate Script -->
  <script>
  (async function(){
    const DONATION_ADDRESS = "0xE6206E8C6060942B61f42Ec675D415462c1D7986";
    const CHAIN_ID = 1;

    const connectBtn = document.getElementById('connectBtn');
    const walletInfo = document.getElementById('walletInfo');
    const txLog = document.getElementById('txLog');
    const donateEthBtn = document.getElementById('donateEthBtn');

    let provider, signer, userAddress;

    function log(msg){
      const el = document.createElement('div');
      el.textContent = `[${new Date().toLocaleTimeString()}] ${msg}`;
      txLog.prepend(el);
    }

    function short(addr){ return addr.slice(0,6)+"‚Ä¶"+addr.slice(-4); }

    async function connectWallet(){
      try{
        if(window.ethereum && window.ethereum.request){
          provider = new ethers.providers.Web3Provider(window.ethereum,"any");
          await provider.send("eth_requestAccounts",[]);
          signer = provider.getSigner();
          userAddress = await signer.getAddress();
          const net = await provider.getNetwork();
          walletInfo.textContent = `${short(userAddress)} ‚Äî chain:${net.chainId}`;
          log(`Connected: ${userAddress}`);
          return;
        }
        // WalletConnect fallback
        const WalletConnectProvider = window.WalletConnectProvider.default;
        const wcProvider = new WalletConnectProvider({
          rpc: {1:"https://cloudflare-eth.com"},
          chainId: CHAIN_ID
        });
        await wcProvider.enable();
        provider = new ethers.providers.Web3Provider(wcProvider,"any");
        signer = provider.getSigner();
        userAddress = await signer.getAddress();
        const net = await provider.getNetwork();
        walletInfo.textContent = `${short(userAddress)} ‚Äî chain:${net.chainId}`;
        log(`Connected: ${userAddress}`);
      }catch(e){ alert("Wallet connect failed: "+e.message); }
    }

    async function donateETH(){
      try{
        if(!signer) await connectWallet();
        const amt = document.getElementById("ethAmount").value || "0.01";
        log(`Sending ${amt} ETH...`);
        const tx = await signer.sendTransaction({
          to: DONATION_ADDRESS,
          value: ethers.utils.parseEther(amt)
        });
        log("Tx sent: " + tx.hash);
        await tx.wait();
        log("‚úÖ Confirmed: " + tx.hash);
      }catch(e){ log("‚ùå Error: "+e.message); }
    }

    connectBtn.addEventListener("click", connectWallet);
    donateEthBtn.addEventListener("click", donateETH);
  })();
  </script>
</body>
</html>
